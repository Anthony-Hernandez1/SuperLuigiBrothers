//
// Created by ADAMIK on 11/19/2018.
//

#ifndef ENEMY_H
#define ENEMY_H
#include <iostream>
#include <algorithm>
#include "SDL_Plotter.h"
#include "Player.h"
#include "Collisions.h"
class Enemy {
public:

    int width;
    int height;
    int velX;
    int velY;
    //int hp;
    int posX;
    int posY;
    int hp;
    int posY2,
        posX2;

    Enemy()
    {
         width = 74;
        height = 22;
        velX = 0;
        velY = 0;
        posX2 = 300;
        posY2 = 200;
    //int hp;
        posX = 40;
        posY = 530;
        hp = 1;
    }

    void move(int xOffset, int yOffset)   // allows you to move
    {
        posY = min(max(posY + yOffset, 0), windowHeight - height-40);
        velX = posX -5;
        velY = posY +5;
    }

    void moveLeft(int xOffset)
    {
        posX-=1;
    }

    void moveRight(int xOffset)
    {
        posX+=1;
    }

    void gravity(int yOffset)
    {
        while (posY!= windowHeight-height-40){
        posY+=1;
        }
    }
    void drawEnemy(SDL_Plotter & g)
    {
        for (int col = posX; col < width + posX; col++)   // goes through all columns
        {
            for (int row = posY; row < height + posY; ++row)
            {
                g.plotPixel(col,row, 230,10,204);
            }
        }
    }
    void drawEnemy2(SDL_Plotter & g)
    {
        for (int col = posX2; col < width + posX2; col++)   // goes through all columns
        {
            for (int row = posY2; row < height + posY2; ++row)
            {
                g.plotPixel(col,row, 255, 153, 204);
            }
        }
    }
// mutators
    void setHealth(int h)
    {
        hp = h;
    }

    void setPosX(int x)
    {
        posX = x;
    }

    void setPosY(int y)
    {
        posY = y;
    }
// accessors
    int getHealth()
    {
        return hp;
    }

    int getPosX()
    {
        return posX;
    }

    int getPosY()
    {
        return posY;
    }

    int getWidth()
    {
        return width;
    }

    int getHeight()
    {
        return height;
    }

// destroy
    void die()
    {
       // if(Collision(Enemy e,Player p))
        //{
         //   ~Enemy;
        //}
    }


};
#endif //ENEMY_H
